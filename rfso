#!/usr/bin/env bash


#MIT License
#
#Copyright (c) 2022 shirot7335
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

readonly CMDNAME="$(basename $0)"

MODE="difference"
FILEPATH_A="${1}"
FILEPATH_B="${2}"

usage_exit() {
    cat <<HELP 1>&2
Usage: ${CMDNAME} [OPTION]...
[OPTION]
    -m=<"difference" or "intersection">
    -a=<left side of set operation filepath>
    -b=<right side of set operation filepath>
    -h show this message
HELP

    exit 1
}

#ERROR Message{{{
error__file_is_not_exists() {
    filepath="${1}"

    echo "${filepath} is not exists." 1>&2
    exit 1
}
#}}}

# Set operations {{{
non_duplicate_array__intersection() {
    non_duplicate_array_a="${1}"
    non_duplicate_array_b="${2}"

    printf "%s\n" $(echo "${non_duplicate_array_a[@]}" "${non_duplicate_array_b[@]}") | sort | uniq -d
}

non_duplicate_array__difference() {
    non_duplicate_array_a="${1}"
    non_duplicate_array_b="${2}"

    intersection_array="$(non_duplicate_array__intersection "${non_duplicate_array_a}" "${non_duplicate_array_b}")"

    printf "%s\n" $(echo "${non_duplicate_array_a[@]}" "${intersection_array[@]}") | sort | uniq -u
}
#}}}

main() {
    filepath_a="${1}"
    filepath_b="${2}"
    mode="${3}"

    non_duplicate_array_a=($(cat "${filepath_a}" | sort | uniq))
    non_duplicate_array_b=($(cat "${filepath_b}" | sort | uniq))

    eval "non_duplicate_array__${mode} "${non_duplicate_array_a}" "${non_duplicate_array_b}""
}

while getopts m:a:b:h OPTION
do
    case $OPTION in
        m)
            MODE="${OPTARG}"
            ;;
        a)
            FILEPATH_A="${OPTARG}"
            ;;
        b)
            FILEPATH_B="${OPTARG}"
            ;;
        h)
            usage_exit
            ;;
    esac
done

case "${MODE}" in
    'difference') ;;
    'intersection') ;;
    *) usage_exit ;;
esac

if   [ ! -e "${FILEPATH_A}" ]; then
    error__file_is_not_exists "${FILEPATH_A}"
elif [ ! -e "${FILEPATH_B}" ]; then
    error__file_is_not_exists "${FILEPATH_B}"
fi

if [[ "${BASH_SOURCE[0]}" == "${0}"  ]]; then
  main "${FILEPATH_A}" "${FILEPATH_B}" "${MODE}"
fi


exit 0
